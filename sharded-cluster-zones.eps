%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1143.000000 475.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.6 (Build 18G87) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1143 475
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1143 475
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: ProximaNova-Regular
%!FontType1-1.0: ProximaNova-Regular 1.0000.1.1000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /ProximaNova-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /z put
dup 34 /o put
dup 35 /n put
dup 36 /e put
dup 37 /colon put
dup 38 /space put
dup 39 /bracketleft put
dup 40 /quotedblleft put
dup 41 /A put
dup 42 /quotedblright put
dup 43 /bracketright put
dup 44 /comma put
dup 45 /B put
dup 46 /C put
dup 47 /Z put
dup 48 /s put
dup 49 /one put
dup 50 /hyphen put
dup 51 /zero put
dup 52 /two put
dup 53 /three put
dup 54 /braceleft put
dup 55 /X put
dup 56 /eight put
dup 57 /braceright put
dup 58 /S put
dup 59 /h put
dup 60 /a put
dup 61 /r put
dup 62 /d put
dup 63 /l put
dup 64 /p put
dup 65 /t put
dup 66 /i put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -201 1 index div -408 2 index div 2152 3 index div 1823 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 36 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/hyphen 3 def
/zero 4 def
/one 5 def
/two 6 def
/three 7 def
/eight 8 def
/colon 9 def
/A 10 def
/B 11 def
/C 12 def
/S 13 def
/X 14 def
/Z 15 def
/bracketleft 16 def
/bracketright 17 def
/a 18 def
/d 19 def
/e 20 def
/h 21 def
/i 22 def
/l 23 def
/n 24 def
/o 25 def
/p 26 def
/r 27 def
/s 28 def
/t 29 def
/z 30 def
/braceleft 31 def
/braceright 32 def
/quotedblleft 33 def
/quotedblright 34 def
/uniFB03 35 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-201 -408 2152 1823}def
/UniqueID 4015547 def
currentdict currentfile eexec

E46FF2751076FE77F3B7F6308EF96281D1798E716C6CBD87D8C4BE4E946DFA17D37838C187FF800BB4C8695D9A9F0A8C5F89B420610CFC576351FE9A7611199F8C64B8BAC793E2555880502BDA49F089F063BC4327308F85CEF6E2DA7B9B72727B86A6042A1D52B897022056AB456F98A4F13D847DBE9594B79DE78575BD6D7B55B0A6987DD2C0E3AECA926F1FECE1AA0786030863DE2CA70AD12FC6FC132E27AE26AA4D42FBBE8E64644CEDB9C9A50F22FF4E3D8DD7223F8A995ABA0EA829E49DCFD057D173F9FD7B96772FD1FA5A48066DAAAFEBEBAB788496F823EBD5895B5F5237BAFF7C20FAAC60E7BF8E3ACEAD3156D3EF1AEAA4DB57E08D9FC1C0D88F351EBFB2F4A9D48C9296FC44FC4574055535F19C521EB9747A8A1264B267E202639B96DE3D97E755EABDDB06F3D5F56B91EDD325278E3C3259D019EB98A8C508DEA4286151ECABB6A42D2E4C1DA79A9C00FFB3FC358FC1287990B5D3DD13D80D994AC412FC1B24F4659E2AA792EBBF01BA0576F154E93521366DE7489463E11050D4E7AFE0186DF360AC24BD489B11E705B76C1AF43CFE2E19E326D8B4BD48BB7EA60D16F33D52C49A9D22F3285D76715321EE3AD0F831E431045C9D7B5CCDE6CD9736881C31D1D1E348B7141135C7B6DF80BD58809E1CF905D40B3402790184E0A0B437E99DA0896AD2485DD1D943A3D089746BD96A509E08FF9846BAB9F62E3A566B711B09D2EA5D6D4772252A257DA631D4D40423937B1CA8372A36C5393D137FE5C8CD1C5936A96B2365D2BF0C574BE4CD2B6999193ACD7A1E9466D4710331A0172DBF6508C075389DEC21DE1BADBEDC33BAD1856412C506BC8EA34CE0F66A36AF052F747A5CC319886DF683109EC55D5E6139DC761687FAB4DD3D8F37DFC6951A4A241DCA57771D7198309D55340ECA5B99F722C0FD8C0A3F457083949865C3E410089D7D449078346E68270E56AC31E92815E635AD3B188906A7B418CE95F22BCFC909DBC6E9004598E8BF3EAC059DF37A195D4F1B44BA18FD4741C587C8F1E5E51667E8AACAB2A7D41C1D155C77BD6EB29C753FF6E7AB46995B1D974D291929B44FCF38BFECA8810C6583064C3DC4C6FA0C39577B0F75B8378D9EF1419E631121E709D146FA09E96ED0D7FF3775BAA7A0468039C5EFB4E734554F5E9D7E29B110AF313573325D2609B7E449C3EDC9A4CCBF9921DB643C15F4B2D369C51A3BDD4184ECF327F27AA4B538E7CD8388F89D7F2C149AC704413ABFA925449F194B0D3CCD2984C25A41816EA5F08EA380A961B2896DFA5ED9F24441A75874AFD7C5FDD2AF55C5A3424296E7CDEACF564EBFE1512A0ECDE84ECDDFA662B2EE61CA8B840C34C5DF71D9AE51F6928DDDDD8C4B2A62347B851A354D9B07234B72640FB1E61E0E0704103BE12522B110F1BCB5005FE100EB2581ACF8DC74226CE29F
DA843F22A5866DF58ECDB955D7131D6CEEF23F89657EB90F3110790F3853A96594C074AF6B1B31CC9A18D418883C2F732F89BF0A90B84D0E7D8D5AE8975C03EB70FE2B89EFECD2C8FBAD3887031443AAE13F09B5E516561D219F8E0251DF1FEC5EFCF2F5FF5BBC4A604DAD47CAD58654BB4E574893935EDE2D233096CCC1D71AFFE2BD3A9C74ABEB063851168A6806DDCF854486C8B1E1A5E1F961A56F09A55D56ED40B5C51D94EF9DC9B398A6CDFB95A49359EB41C6515E591471374948A3DDE87ABF6E81CDBBFFD088B012F3ED7ED31E456B8765AA394ACC3D2FC8ECB138A8B1DC7A61AD94B6E0665F6186DE36B24BCF17EC186710230018FEA908B035433C7AE34A0FB47B10FDCD2C32782DC510D1CD731A84A966BF64B218D45739427843FA029EC02997185E509C5410A4356F5C19A3B2FD61E1CF387A900A9196315E9091A153083A4AA81F7D9AB3B8A57ADD1A0B959A7D1BC5E7A14D3228F6643B84EAEB9ECF86CBCC3DAED80BB1D7C307DB90C98DC07C26E9AB795043E6A18D86D795B7F85F662DCBD5C97068980905A1EE30D49FAAD4973379ECCD2DC6CD647153725EA0182205AB2AAE6551D6A00CE61009FC605EB738068392FBD4226A6B67B602FA774567B5DBFB84615693BBB155DC1A447A73E33A1883B27EC4E91537FDBC40FB4DE500324E2809F09CC788CB24CF1D4341A55F5C761DA3146AFBC0E08F3E24D820C4B48F4090A4E0766F6C4DE3852152BA3BEC3AA9D88A4ECD908BFA938209B56CE30869F52EE85126DB8BD44C7373685FBEBB9E7AC03912BC45D82CF13BE71240D53012ABDEF672659D5B08EA04738B0A9B25E2490970333C77C0302D0ECC84CAB4BF033B8AD1E1D4212C3754DF3ABE8315B385744D4D96C3568FC62CA8C6278004D0CDCD5310E637145CC9FD0A3B25546B6CA0005870A04FC8E7019BAAAB8728619CF1EA3DEFB8DF5AECC15ED7626E4F2D5813F543CF3238E71B4E128FE6B31517CF412104BE6F57A13798D88A5A57B8033DDCECCBA11BC549EADAF9A5B67A48E525A7D9531305EBE2F14F710256D1BA5B35C1076192906B078845DE22DC607452CAC36A99FF376A9630857966895E25527CB929716A48845175C5CEA44B1711F3882B032073B259F76A63196EF09E6F4410B30C213C156F370CB1DB6CFC53DF6A850B0B2C0A6DE355F448E2A80539291BF3DA69962C74D6B3B2DC801F185D54B6E37A093C3AAB4797228322B447085777FA526D2C61337DB7F4C63CF28B31640DCD7415BAE1808342ABD758695A162338B1F54EB03BB40D8FBCE10944AFD8C8F1156684CB7ED659B236601369619F7B2ABA4EFD647D70BA8B99D125225E5A19457A122EF6C7AC63D2A17BD6A02021D65A7414E6FC218367266402895A6543979E2F0DF88948EDD511632F6074B2C86E00F3459F58E46549ADA44663F335

1053959CC53C193B0C3403B2F7DE284E71E2A271203D27C248F7C5B5CF92792EE84F8DC568E179601B456A87C90F9298F4EB5C2993010FB240646CCC3EFB52C6774646A33AA74409582B3FF80353F9BC3CC39D49D773796D482AED344080731D1A7D8B954F73D38244F34BD4AE0360F23BA1B97AAEBF6A2D49E6B81D415E9EA85C7F28F691C8386A1E89427F00915CA5EDC889AD1CEACDF1E6370404DCC1A58580545C8E3ADE6719C3A8CCEB2E976A556E963AF076A6AAFCB753BAF7AFFF525E6029381AF75D0A9075AB7FE55BF475EB4FA5DAA65D56E954F3AE5A6E01AA0F85863FB28A523DF36A6B45FBD0515F503F625F527F1918ED00AD75B434ED57F83893FA01BA4118ADF13388774C44937359923E56193AADE89934C9F646F33100198E8B918C89069650A51D84107500DEFF007E80B02B3EA658F64D983788ADF9064A1DC1D310300EBACF6C6F29E6DE7BBFF744B93CCB4BDE183D5848F5A8CAF0C39DF47CCB3690BAF9AEE52606172F94FC9A2E116C362516E9EBF1CEA511CE7BFABFB6859FB37625B988A9C477C9FA735BC4C3A49EEF985ECE5DD24C3A7FDF49444678EB256ADD34D47BF1BD8740DAC1FD9DA0E90A13D855F53E9A9CAA3E8450F71F00F0F8F2EBBD54F6EDF028EDE9B3A88B447984EFEA6D0246260E6675904138608D7FCAF8C247B9CFD52FC53033DFC248D49BE66DED8F4BF8AF8EDB4150928B802DDAB6F0C248072D9CE2B02C244B63BB922F81F68C21507C3BD7BC0E07887FC51CA979DD21F99D58492776EA2D7DA248190C8A5E298D80BF201445376C56465616C4A56E7C04D24CDA7822797200867CCE96B55BC09D99374A1B309CF86F90CB6AE6B7AD56AEDEBFA9148A6D6CFFD8F533C05E55248B03092944D6BF59C47257B1E39540917273522C564FB1AC6F029055571721CBFF2F2A4915698501F06B46E5A9FF86B07FAECE572D4A859891418C9D8AFEC88BC79347B16BCC9698A4F326DD31849C5F5C2F48DB4A6B5BCED0283374A6448974C4073930F67CFCE2E6B52CF3AEBB612B025CD7715891D55BB9B388D7C80582C7C51DFE9A0994702136C20F7735F63041A4D96AEF993D69A2A7AA4FFA05498CC3E9B49113B38B059B2E676C6DBA232B7E4E19B0F0BB6B3F8D3967D365293562E078C0695D372A2CEE6DC5462E9A70739F1B379C736CAE525D73BC9D0C94BC10486914C0F063A8E9EFA2369FD2A5AC57EFBCDB56C91D5752E09CB0BAC2A3BDC3BF636AA1C7547CB52AF127644FD0339BD6D5A6326DA37FA197F074CF4B4F7D0EBB9A43D847AADDDAF81C93D9ACB83C5F52D301C531085B8F8A30FA653079AF3F7675A3DBDC46292B1A7CAA992B7C236097D63CD87139C2A32E4398FA2E7526C6EFB422A91974C39318A2F74172C782D33C0D2E3D6C532107635A349B3002B122AA9D1348E4EAD710C398F0
DFD56A333CAD7FBF71938EC80E47CB14854CE8EEA8FDF5193223D7692765D7DD50F264ADA3326C77779BBCC6BF5F8A17C47CF9088D6365D1803781752C54DF75F25A8CD2B32144F9F5CF287778B1CA6A75A9EA14DE53DFC98F615E6F7345E130BD12D803E25263C6361C9273A5E7DF2BEEAAAA07114D9A5A23F0A30034BB7838917A936D539ABDBF02550F91923BDE0892140798FACB40C0DABF7DC3954105FF4E1520EDC78E55B83A85DB4926A3E564358A3C30FF11694535D906D8B10137951226DF63E5950980D82CD3B44E92E85423133573D9655FB7ED974810B90ABA49C0696EF63C2CDC439F441D6E8962538D63EF2ADBB0560DDF9E3CC3991E4E1703F6E8697C70C7BFEF94A0E5CD245E3CFC4101EAFFA56D422AD83CFE0B8BF7572FD7018FC0BB3358939309D509142DD84A2E3B26C31D0C72C675B1369A24A551BAEF1402770AE7721EC487C64ED6E8E65A521315D0E978350BCC1F9D0DC670128BE006E7B0883F4625E0DBA3120BF422D6BE1332B44DAEFEA57516A6AFF26780B9B543C10D689B9E252A71B7D9425611C7762A13C02C6B27BB60E8B4DF54A6284DFAA1217857B13B2C4A802DBC73DDDAA527301A3749BD01FCD701FEAC84B4832B3FC86E13E9B076BE6E432E8BF707C56705DF1C18BE515A7CFB98CE90B9A121DA4F5F0474002AFE9C9FCFA670941EAD8A74F5EC966512ED94EA429D2B33758633FFF720E4569A853CD79BC964D9A5443BB0F8E78944CC1C410F09EE0B7F22E2D342DC64DEAA72CC3942DCA9F07FC0749B8A9EBF0AA2195A31873A9FEC4AA7AB34F94419C875C2F1AD543630101714017031CFD523C59FEAE3F581399F0AEEBF912F18B933FDBF1E0C26E297EA2C23CBEA04210218AFCFB4525DD206839C02B3CC20570C717CFC763371813EC2CDE9B693A050E7661EEA8AFEF189E6EC2D931594A406F4DC442C79A624A87F9AF3AFD5CDF8F91B266397A902541A9123B8663BDCA3CE324619ACE64B060D33F4FB591F9B639890FBCF144E574BC0EAACAE5FA980616B0CD4EBDB7BBA355A2A2BB181DD7A37434A934046102C9717EE8010AF9A8EC84E0811E8B43D000B93A28DA3A784B57E129F8C9CDFF2081AA8190A481AC33D90E0B8E6942EFFF34328DD52A167E5FB1376B44950CB2A991F5B9B46D79F5866A1E847674F9D95CAF085BCB9CFE4F8B3F6FDA5F3C778D883F1EF0A3310CF19F0B2503F5C9BE154B9871C4F45E7E120D7AD82
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/ProximaNova-Regular cguidfix
/F1.1/ProximaNova-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 1143 475 rc
0 475 m
1143 475 l
1143 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
0 475 m
1143 475 l
1143 0 l
0 0 l
h
0 475 m
f
0.40784299 0.73725498 0.21176501 sc
53.799999 146 m
300.20001 146 l
329.34561 146 353 113.52 353 73.5 c
353 33.48 329.34561 1 300.20001 1 c
53.799999 1 l
24.6544 1 1 33.48 1 73.5 c
1 113.52 24.6544 146 53.799999 146 c
h
53.799999 146 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -39 493 cm
92.800003 347 m
339.20001 347 l
368.34561 347 392 379.48001 392 419.5 c
392 459.51999 368.34561 492 339.20001 492 c
92.800003 492 l
63.6544 492 40 459.51999 40 419.5 c
40 379.48001 63.6544 347 92.800003 347 c
h
92.800003 347 m
S
0 i
/F1.1[ 28 0 0 -28 0 0]sf
152.10449 429 m
(!"#$%&'\(\)*+)[ 13.207031 16.009766 15.449219 15.763672 6.289062 7.246094 6.794922 10.910156 18.416016 10.910156 0.000000 ] xS
0.40784299 0.73725498 0.21176501 sc
CM
448.29999 146 m
694.70001 146 l
723.84558 146 747.5 113.52 747.5 73.5 c
747.5 33.48 723.84558 1 694.70001 1 c
448.29999 1 l
419.15439 1 395.5 33.48 395.5 73.5 c
395.5 113.52 419.15439 146 448.29999 146 c
h
448.29999 146 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -39 493 cm
487.29999 347 m
733.70001 347 l
762.84558 347 786.5 379.48001 786.5 419.5 c
786.5 459.51999 762.84558 492 733.70001 492 c
487.29999 492 l
458.15439 492 434.5 459.51999 434.5 419.5 c
434.5 379.48001 458.15439 347 487.29999 347 c
h
487.29999 347 m
S
0 i
520.04688 429 m
(!"#$%&'\(\)*,&\(-*+)[ 13.207031 16.009766 15.449219 15.763672 6.289062 7.246094 6.794922 10.910156 18.416016 10.910156 6.439453 7.246094 10.910156 17.609375 10.910156 0.000000 ] xS
0.40784299 0.73725498 0.21176501 sc
CM
842.79999 146 m
1089.2 146 l
1118.3456 146 1142 113.52 1142 73.5 c
1142 33.48 1118.3456 1 1089.2 1 c
842.79999 1 l
813.65442 1 790 33.48 790 73.5 c
790 113.52 813.65442 146 842.79999 146 c
h
842.79999 146 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -39 493 cm
881.79999 347 m
1128.2 347 l
1157.3456 347 1181 379.48001 1181 419.5 c
1181 459.51999 1157.3456 492 1128.2 492 c
881.79999 492 l
852.65442 492 829 459.51999 829 419.5 c
829 379.48001 852.65442 347 881.79999 347 c
h
881.79999 347 m
S
0 i
940.85156 429 m
(!"#$%&'\(.*+)[ 13.207031 16.009766 15.449219 15.763672 6.289062 7.246094 6.794922 10.910156 18.921875 10.910156 0.000000 ] xS
0.80000001 0.80000001 0.80000001 sc
CM
52.450001 474 m
96.550003 474 l
111.25 474 118.6 474 127.42 471.51999 c
134.77 469.04001 142.12 462.84 145.06 456.64001 c
148 449.20001 148 443 148 430.60001 c
148 393.39999 l
148 381 148 374.79999 145.06 367.35999 c
142.12 361.16 134.77 354.95999 127.42 352.48001 c
118.6 350 111.25 350 96.550003 350 c
52.450001 350 l
37.75 350 30.4 350 21.58 352.48001 c
14.23 354.95999 6.8800001 361.16 3.9400001 367.35999 c
1 374.79999 1 381 1 393.39999 c
1 430.60001 l
1 443 1 449.20001 3.9400001 456.64001 c
6.8800001 462.84 14.23 469.04001 21.58 471.51999 c
30.4 474 37.75 474 52.450001 474 c
52.450001 474 m
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -39 493 cm
91.449997 19 m
135.55 19 l
150.25 19 157.60001 19 166.42 21.48 c
173.77 23.959999 181.12 30.16 184.06 36.360001 c
187 43.799999 187 50 187 62.400002 c
187 99.599998 l
187 112 187 118.2 184.06 125.64 c
181.12 131.84 173.77 138.03999 166.42 140.52 c
157.60001 143 150.25 143 135.55 143 c
91.449997 143 l
76.75 143 69.400002 143 60.580002 140.52 c
53.23 138.03999 45.880001 131.84 42.939999 125.64 c
40 118.2 40 112 40 99.599998 c
40 62.400002 l
40 50 40 43.799999 42.939999 36.360001 c
45.880001 30.16 53.23 23.959999 60.580002 21.48 c
69.400002 19 76.75 19 91.449997 19 c
91.449997 19 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 20 0 0 -20 0 0]sf
45 55 m
(/"#$0%)[ 11.699219 11.435547 11.035156 11.259766 9.296875 0.000000 ] xS
45 77 m
('&\)&+&%&1&2&13)[ 4.853516 5.175781 13.154297 5.175781 4.853516 5.175781 4.492188 5.175781 6.777344 5.175781 5.996094 5.175781 6.777344 0.000000 ] xS
45 99 m
('&-&+&%&13&2&43)[ 4.853516 5.175781 12.578125 5.175781 4.853516 5.175781 4.492188 5.175781 6.777344 12.236328 5.175781 5.996094 5.175781 11.757812 0.000000 ] xS
45 121 m
('&.&+&%&43&2&53)[ 4.853516 5.175781 13.515625 5.175781 4.853516 5.175781 4.492188 5.175781 11.757812 12.236328 5.175781 5.996094 5.175781 11.132812 0.000000 ] xS
3 w
0 j
0.60000002 i
/Cs4 SC
0.35166895 0.64280897 0.84708565 sc
321 71 m
321.21875 245.58594 l
216 245.58594 l
216 330.10001 l
S
0 i
CM
177 151.7 m
181.2 162.89999 l
172.8 162.89999 l
h
177 151.7 m
f
0 J
1 0 0 -1 -39 493 cm
216 341.29999 m
220.2 330.10001 l
211.8 330.10001 l
h
216 341.29999 m
S
1 J
0.60000002 i
0.94308454 0.58158082 0.52155066 sc
509.5 71 m
509.5 208.64453 l
610.5 208.64453 l
610.5 330.10001 l
S
0 i
CM
571.5 151.7 m
575.70001 162.89999 l
567.29999 162.89999 l
h
571.5 151.7 m
f
0 J
1 0 0 -1 -39 493 cm
610.5 341.29999 m
614.70001 330.10001 l
606.29999 330.10001 l
h
610.5 341.29999 m
S
1 J
0.60000002 i
0.47760695 0.69039941 0.3175661 sc
700.5 71 m
700.5 208.5 l
681.91797 208.5 l
681.91797 331.10001 l
S
0 i
CM
642.91797 150.7 m
647.11798 161.89999 l
638.71796 161.89999 l
h
642.91797 150.7 m
f
0 J
1 0 0 -1 -39 493 cm
681.91797 342.29999 m
686.11798 331.10001 l
677.71796 331.10001 l
h
681.91797 342.29999 m
S
1 J
0.60000002 i
0.36097181 0.16620344 0.38825381 sc
891.5 71 m
891.5 208.5 l
1005 208.5 l
1005 330.10001 l
S
0 i
CM
966 151.7 m
970.20001 162.89999 l
961.79999 162.89999 l
h
966 151.7 m
f
0 J
1 0 0 -1 -39 493 cm
1005 341.29999 m
1009.2 330.10001 l
1000.8 330.10001 l
h
1005 341.29999 m
S
2 w
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
245 19 m
392 19 l
392 70 l
245 70 l
h
245 19 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 24 0 0 -24 0 0]sf
282.32422 52.5 m
(6&7&%&8&9)[ 6.257812 6.210938 15.644531 6.210938 5.390625 6.210938 13.957031 6.210938 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
436 19 m
583 19 l
583 70 l
436 70 l
h
436 19 m
S
/Cs1 SC
0 sc
0 i
469.55664 52.5 m
(6&7&%&15&9)[ 6.257812 6.210938 15.644531 6.210938 5.390625 6.210938 8.132812 13.359375 6.210938 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
627 19 m
774 19 l
774 70 l
627 70 l
h
627 19 m
S
/Cs1 SC
0 sc
0 i
664.62305 52.5 m
(6&7&%&5&9)[ 6.257812 6.210938 15.644531 6.210938 5.390625 6.210938 13.359375 6.210938 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
818 19 m
965 19 l
965 70 l
818 70 l
h
818 19 m
S
/Cs1 SC
0 sc
0 i
848.56836 52.5 m
(6&7&%&45&9)[ 6.257812 6.210938 15.644531 6.210938 5.390625 6.210938 14.109375 13.359375 6.210938 0.000000 ] xS
/Cs2 SC
0 0 0 sc
/F1.1[ 23 0 0 -23 0 0]sf
70 331 m
(:;<=>&\)?@;<)[ 13.476562 12.690430 12.140137 7.580566 13.218262 5.952148 15.127441 5.166016 13.150879 12.690430 0.000000 ] xS
466 330 m
(:;<=>&-$A<)[ 13.476562 12.690430 12.140137 7.580566 13.218262 5.952148 14.464844 12.948730 6.760742 0.000000 ] xS
853 331 m
(:;<=>&.;<=?B$)[ 13.476562 12.690430 12.140137 7.580566 13.218262 5.952148 15.542969 12.690430 12.140137 7.580566 5.166016 5.166016 0.000000 ] xS
ep
end
%%Trailer
%%EOF
